/**
 * –ö–ª–∞—Å–∏
 *  - –û–≥–æ–ª–æ—à–µ–Ω–Ω—è –∫–ª–∞—Å—É
 *  - –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—É
 *  - –ú–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É
 *  - –ü—Ä–æ—Ç–æ—Ç–∏–ø –µ–∫–∑–µ–º–ø–ª—è—Ä—É
 *  - –ü—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
 *  - –ì–µ—Ç—Ç–µ—Ä–∏ —ñ —Å–µ—Ç—Ç–µ—Ä–∏
 *  - –°—Ç–∞—Ç–∏—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
 */

class Car {
  static description = "–ö–ª–∞—Å –¥–ª—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∞–≤—Ç–æ–º–æ–±—ñ–ª—è!"; // —Å—Ç–∞—Ç–∏—á–Ω–µ –ø–æ–ª–µ, –≤–æ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–µ —Ç—ñ–ª—å–∫–∏ –ß–ï–†–ï–ó –°–ê–ú –ö–õ–ê–° (—Ñ–∞–∫—Ç–∏—á–Ω–æ –∫–ª–∞—Å - —Ü–µ —Ñ—É–∫–Ω—Ü—ñ—è, –∞ —Ñ—É–∫–Ω—Ü—ñ—è - —Ü–µ –æ–± º—î–∫—Ç, —Ç–∞–∫ –æ—Ç —Å—Ç–∞—Ç–∏—á–Ω–µ –ø–æ–ª–µ —Ü–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–ª–µ —Ü—å–æ–≥–æ –æ–± º—î–∫—Ç—É). –í–æ–Ω–∏ –Ω–µ –¥–æ–¥–∞—é—Ç—å—Å—è –≤ –µ–∫–∑–µ–º–ø–ª—è—Ä–∏, –Ω–µ –Ω–∞—Å–ª—ñ–¥—É—é—Ç—å—Å—è, –≤–æ–Ω–∏ —ñ—Å–Ω—É—é—Ç—å —Ç—ñ–ª—å–∫—Ç –≤ –æ–± º—î–∫—Ç—ñ –∫–ª–∞—Å—É —ñ –≤—Å–µ

  static displayCarObj(carObj) {
    console.log("–û–± º—î–∫—Ç –∞–≤—Ç–æ–º–æ–±—ñ–ª—è ->", carObj);
  }

  #owner; // —Å—Ç–≤–æ—Ä–∏–≤ –ø—Ä–∏–≤–∞—Ç–Ω–µ –ø–æ–ª–µ –∫–ª–∞—Å—É (–≤–æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ —Ç—ñ–ª—å–∫–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–ª–∞—Å—É —ñ –≤—Å–µ)

  // —Ü–µ –º–µ—Ç–æ–¥, —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—ñ–¥ —á–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫–∑–µ–º–ø–ª—è—Ä—É –∫–ª–∞—Å—É
  constructor(brand, model, price, owner) {
    this.brand = brand; // –ø—É–±–ª—ñ—á–Ω–µ –ø–æ–ª–µ (–¥–æ—Å—Ç—É–ø–Ω–µ –ø–æ–≤—Å—é–¥–∏: –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–ª–∞—Å—É, –≤ –µ–∫–∑–µ–º–ø–ª—è—Ä—ñ, –Ω–∞—Å–ª—ñ–¥—É—é—î—Ç—å—Å—è —É –¥–æ—á—ñ—Ä–Ω—ñ–π –∫–ª–∞—Å)
    this.model = model;
    this.price = price;
    this.#owner = owner;
  }

  // –ø—É–±–ª—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥
  displayCarInfo() {
    console.log(
      `–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è: ${this.brand}\n–ú–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±—ñ–ª—è: ${
        this.model
      }\n–¶—ñ–Ω–∞ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è: ${this.price}$\n–í–ª–∞—Å–Ω–∏–∫ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è: ${this.#owner}`
    );
  }

  // –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –º–µ—Ç–æ–¥, –¥–æ—Å—Ç—É–ø–Ω–∏–π —Ç—ñ–ª—å–∫–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–ª–∞—Å—É
  #checkEmail() {
    const email = prompt("–í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—é –ø–æ—à—Ç—É –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è");
    return email === this.#owner;
  }

  // –¥–ª—è —Ç–æ–≥–æ, —â–æ–± —á–∏—Ç–∞—Ç–∏ –∞–±–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –ø–æ–ª—è –∫–ª–∞—Å—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –º–µ—Ç–æ–¥–∏ –∞–∫—Å–µ—Å–æ—Ä–∏ (get —ñ set). –¶—ñ –∞–∫—Å–µ—Å–æ—Ä–∏ —Ñ–∞–∫—Ç–∏—á–Ω–æ —Å—Ç–≤–æ—Ä—è—Ç—å –≤ –≤–∞—à–æ–º—É –µ–∫–∑–µ–º–ø–ª—è—Ä—ñ –ø—É–±–ª—ñ—á–Ω–µ –ø–æ–ª–µ —è–∫–µ –±—É–¥–µ —Ä–æ–±–∏—Ç–∏ —Ç–µ, —â–æ –≤–∏ –π–æ–º—É —Å–∫–∞–∂–µ—Ç–µ.

  get owner() {
    if (this.#checkEmail()) {
      return this.#owner;
    }
  }

  set owner(newOwner) {
    if (this.#checkEmail()) {
      this.#owner = newOwner;
      console.log(`–í–ª–∞—Å–Ω–∏–∫ —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–∏–π! –ù–æ–≤–∏–π –≤–ª–∞—Å–Ω–∏–∫: ${newOwner}`);
    } else {
      console.log("–ü–æ—Ç–æ—á–Ω–∏–π –≤–ª–∞—Å–Ω–∏–∫ –Ω–µ —î –∫–æ—Ä–µ–∫—Ç–Ω–∏–º! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑");
    }
  }
}

console.dir(Car);

console.log(Car.description); // –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ —Å—Ç–∞—Ç–∏—á–Ω–æ–≥–æ –ø–æ–ª—è —á–µ—Ä–µ–∑ —Å–∞–º –∫–ª–∞—Å

const infinityCar = new Car("Infinity", "Q60s", 30000, "aaa@gmail.com");
Car.displayCarObj(infinityCar);

infinityCar.displayCarInfo();
// console.log(infinityCar.#owner) //! Error
// console.log(infinityCar.owner);

// infinityCar.owner = "bbb@gmail.com";

Car.displayCarObj(infinityCar);

const bmwCar = new Car("BMW", "M3", 35000, "bbb@gmail.com");

Car.displayCarObj(bmwCar);

bmwCar.displayCarInfo();
/*
–æ–ø–µ—Ä–∞—Ç–æ—Ä new:
1. —Å—Ç–≤–æ—Ä—é—î –ø—É—Å—Ç–∏–π –æ–± º—î–∫—Ç, —è–∫–∏–π –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è –µ–∫–∑–µ–º–ø–ª—è—Ä–æ–º –∫–ª–∞—Å—É
2. –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—É
3. –ø—ñ–¥ —á–∞—Å –≤–∏–∫–ª–∏–∫—É –≤—ñ–Ω –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è (this) –Ω–∞—à–∏–º –ø—É—Å—Ç–∏–º –Ω–æ–≤–æ—Å—Ç–≤–æ—Ä–µ–Ω–∏–º –æ–± º—î–∫—Ç–æ–º. –¢–æ–±—Ç–æ, –º–µ—Ç–æ–¥ constructor –±—É–¥–µ –º–∞—Ç–∏ this —è–∫–µ –≤–∫–∞–∑—É—î –Ω–∞ –Ω–∞—à –ø—É—Å—Ç–∏–π –Ω–æ–≤–∏–π –æ–± º—î–∫—Ç.
*/

// ======================================================

/**
 * –ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –∫–ª–∞—Å—ñ–≤
 *
 *  - extends
 *  - –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–æ—á—ñ—Ä–Ω—å–æ–≥–æ –∫–ª–∞—Å—É (super)
 *  - –ú–µ—Ç–æ–¥–∏ –¥–æ—á—ñ—Ä–Ω—å–æ–≥–æ –∫–ª–∞—Å—É
 */

class Rectangle {
  constructor(width, height) {
    this.width = width;
    this.height = height;
    this.name = "Rectangle";
  }

  greeting() {
    console.log(
      `I'm ${this.name}.\nMy width is ${this.width}\nMy height is ${this.height}`
    );
  }

  calculateArea() {
    return this.width * this.height;
  }

  calculatePerimetr() {
    return this.width * 2 + this.height * 2;
  }
}

class Square extends Rectangle {
  constructor(length) {
    super(length, length); // –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–∞—Ç—å–∫—ñ–≤—Å—å–æ–≥–æ –∫–ª–∞—Å—É, —Ü–µ —î –æ–±–æ–≤ º—è–∑–∫–æ–≤–∏–º –ø—ñ–¥ —á–∞—Å –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è
    this.name = "Square";
  }

  greeting() {
    console.log(`I'm ${this.name}.\nMy side length is ${this.width}`);
  }
}


const rectangle = new Rectangle(10, 5);

rectangle.greeting();

console.log(rectangle.calculateArea());
console.log(rectangle.calculatePerimetr());

const square = new Square(5);

console.log(square);

square.greeting();

console.log(square.calculateArea());
console.log(square.calculatePerimetr());

// =================================================

/**
 * –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
 * - email - –ø–æ—à—Ç–∞, —Ä—è–¥–æ–∫
 * - age - –≤—ñ–∫, —á–∏—Å–ª–æ
 * - numberOfPosts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
 * - topics - –º–∞—Å–∏–≤ —Ç–µ–º –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –±–ª–æ–≥–µ—Ä
 *
 * –ö–ª–∞—Å —á–µ–∫–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏.
 *
 * - –î–æ–¥–∞–π –º–µ—Ç–æ–¥ getInfo(), —è–∫–∏–π, –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫: Blogger ${email} is ${age} years old and has ${numPosts} posts.
 * - –î–æ–¥–∞–π –º–µ—Ç–æ–¥ updatePostCount(value), —è–∫–∏–π —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ value –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.
 */

class Blogger {
  constructor({ name, age, numberOfPosts, topics }) {
    this.name = name;
    this.age = age;
    this.numberOfPosts = numberOfPosts;
    this.topics = topics;
  }

  getInfo() {
    return `Blogger ${this.name} is ${this.age} years old and has ${this.numberOfPosts} posts`;
  }

  updatePostCount(amount) {
    this.numberOfPosts += amount;
  }
}

const mango = new Blogger({
  name: "mango@mail.com",
  age: 24,
  numberOfPosts: 20,
  topics: ["tech", "cooking"],
});
console.log(mango.getInfo()); // Blogger mango@mail.com is 24 years old and has 20 posts
mango.updatePostCount(5);

console.log(mango.getInfo()); // Blogger mango@mail.com is 24 years old and has 25 posts

console.log(mango);

const poly = new Blogger({
  name: "poly@mail.com",
  age: 19,
  numberOfPosts: 17,
  topics: ["sports", "gaming", "health"],
});
console.log(poly.getInfo()); // Blogger poly@mail.com is 19 years old and has 17 posts
poly.updatePostCount(4);
console.log(poly.getInfo()); // Blogger poly@mail.com is 19 years old and has 21 posts

// =====================================================

/**
 * –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email.
 * –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login —Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑
 * –≥–µ—Ç–µ—Ä —Ç–∞ —Å–µ—Ç–µ—Ä login —Ç–∞ email.
 */

class User {
  #email;
  #login;

  constructor({ login, email }) {
    this.#email = email;
    this.#login = login;
  }

  get login() {
    return this.#login;
  }

  set login(newLogin) {
    this.#login = newLogin;
  }

  get email() {
    return this.#email;
  }

  set email(newEmail) {
    this.#email = newEmail;
  }
}

const mango = new User({
  login: "Mango",
  email: "mango@dog.woof",
});

console.log(mango.login); // Mango
mango.login = "Mangodoge";
console.log(mango.login); // Mangodoge

const poly = new User({
  login: "Poly",
  email: "poly@mail.com",
});

console.log(poly.login); // Poly
poly.login = "Polycutie";
console.log(poly.login); // Polycutie

// =========================================================

/**
 * –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Storage —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç–∏ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä—ñ–≤.
 * –ü—Ä–∏ –≤–∏–∫–ª–∏–∫—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤ —ñ
 * –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏–º–µ –π–æ–≥–æ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å items.
 *
 * –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É:
 * - getItems() - –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤.
 * - addItem(item) - –æ—Ç—Ä–∏–º—É—î –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä —ñ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ –ø–æ—Ç–æ—á–Ω–∏—Ö.
 * - removeItem(item) - –æ—Ç—Ä–∏–º—É—î —Ç–æ–≤–∞—Ä —ñ, —è–∫—â–æ –≤—ñ–Ω —î, –≤–∏–¥–∞–ª—è—î –π–æ–≥–æ –∑ –ø–æ—Ç–æ—á–Ω–∏—Ö.
 */

class Storage {
  constructor(items) {
    this.items = items;
  }

  getItems() {
    return this.items;
  }
  addItem(item) {
    this.items.push(item);
  }
  removeItem(item) {
    const deleteIndex = this.items.indexOf(item);

    if (deleteIndex !== -1) {
      this.items.splice(deleteIndex, 1);
    } else {
      console.log("–¢–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä—É –Ω–µ —ñ—Å–Ω—É—î!");
    }
  }
}

const storage = new Storage(["üçé", "üçã", "üçá", "üçë"]);

const items = storage.getItems();
console.table(items); // [ 'üçé', 'üçã', 'üçá', 'üçë' ]

storage.addItem("üçå");
console.table(storage.items); // [ 'üçé', 'üçã', 'üçá', 'üçë', 'üçå' ]

storage.removeItem("üçã");
console.table(storage.items); // [ 'üçé', 'üçá', 'üçë', 'üçå' ]

storage.removeItem("üçã");

storage.removeItem("üçá");
console.table(storage.items); // [ 'üçé', 'üçë', 'üçå' ]