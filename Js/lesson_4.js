// –ú–∞—Å–∏–≤–∏

// –ú–µ—Ç–æ–¥–∏ –º–∞—Å–∏–≤—É

// - join
// - split
// - slice
// - concat
// - indexOf
// - push/pop

const courses = ['HTML', 'CSS', 'JS', 'REACT'];

// - join- —Ü–µ–π –º–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫—É —è–∫–æ–º—É –±—É–¥—É—Ç—å —Å–∫–ª–µ–π. –≤—Å—ñ
// –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É. + –º—ñ–∂ –∫–æ–º–∞–º–∏ –±—É–¥–µ —Å–∏–º–≤–æ–ª, —è–∫–∏–π –ø–µ—Ä–µ–¥–∞–º–æ
// –≤ —è–∫–æ—Å—Ç—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—É –≤ –¥—É–∂–∫–∞—Ö join() . —è–∫—â–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –∑–Ω–∞—á –ø–∞—Ä–∞–º–µ—Ç—Ä—É ,
// —Ç–æ –∑–∞ –∑–∞–º–æ–≤—á. –±—É–¥–µ –∫–æ–º–∞

console.log(courses.join(', '))
console.log(courses.join(''))
console.log(courses.join())

// - split - —Ü–µ–π –º–µ—Ç–æ–¥ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –Ω–∞ —Ä—è–¥–∫–∞—Ö —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —É —è–∫–æ–º—É –∫–æ–∂–µ–Ω
// –µ–ª–µ–º–µ–Ω—Ç —Ü–µ —á–∞—Å—Ç–∏–Ω–∞ —Ä—è–¥–∫–∞,–Ø–ö–ê  –±—É–ª–∞ h–æ–∑–±–∏—Ç–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å–∏–º–≤–æ–ª—É –≤ –¥—É–∂–∫–∞—Ö split()

console.log('hello world!')
console.log('hello world!'.split(''))
console.log('hello world!'.split(' '))

// - slice() - –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ , —è–∫–∏–π —î –∫–æ–ø—ñ—î—é —á–∞—Å—Ç–∏–Ω–∏ –º–∞—Å–∏–≤—É –Ω–∞ —è–∫–æ–º—É –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –º–µ—Ç–æ–¥

const base = courses.slice(0, 3)
console.log(base)

// concat - –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —É —è–∫–æ–º—É –±—É–¥—É—Ç—å –≤—Å—ñ –º–∞—Å–∏–≤–∏, —è–∫—ñ –≤–∏ –ø–µ—Ä–µ–¥–∞—î—Ç–µ –≤ —è–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
// –¶–µ–π –º–µ—Ç–æ–¥ –∑–ª–∏–≤–∞—î –≤—Å—ñ –º–∞—Å–∏–≤–∏ –≤ –æ–¥–∏–Ω

const bases = ['HTML', 'CSS', 'JS']
const adv = ['REACT', 'SQL']
const allStack = bases.concat(adv)
console.log(allStack)

// indexOf - –ø–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω–¥–µ–∫—Å –ø–µ—Ä—à–æ–≥–æ –∑–Ω–∞—á —É –º–∞—Å–∏–≤—ñ? —è–∫—â–æ —Ç–∞–∫–æ–≥–æ –Ω–µ –º–∞—î —Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î -1

console.log(courses.indexOf('JS'))

// push() - –¥–æ–¥–∞—î –≤ –∫—ñ–Ω–µ—Ü—å –º–∞—Å–∏–≤—É –æ–¥–∏–Ω –∞–±–æ –¥–µ–∫—ñ–ª—å–∫–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤.
// pop() - –≤–∏–¥–∞–ª—è—î –æ–¥–∏–Ω –µ–ª–µ–º–µ–Ω—Ç –∑ –∫—ñ–Ω—Ü—è –º–∞—Å–∏–≤—É

courses.push('NODE.JS', 'REACT NATIVE')
console.log(courses)

const friends = ['Mango', 'Poly', 'Alex', 'Ivan']
for(const friend of friends)
console.log(friend)

console.table(friends) //- –≤–∏–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–∞–±–ª–∏—Ü—é –∑ —ñ–Ω–¥–µ–∫—Å–æ–º —ñ –∑–Ω–∞—á.



// –∑–∞–¥–∞—á—ñ

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä.
// –∑–Ω–∞—á. —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
// –ó–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.

const values = '8 11';

console.log(calculateArea(values))

function calculateArea(values) {
  const valuesArr = values.split(' ');
  const width = Number(valuesArr[0])
  const height = Number(valuesArr[1])
  return width * height
}

// * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits.
//  * –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
//  * —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.
//  * –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
//  */

const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];

for (let i = 0; i < fruits.length; i += 1) {
  console.log(`${i + 1}: ${fruits[i]}`);
}

// –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å—É–º—É –≤—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª —É –º–∞—Å–∏–≤—ñ

const numbers = [1, 5, 8, 9, 12, 4, 15, 30, 18, 14, 27]
let total= 0;
for (const number of numbers) {
  if (number % 2 ===0) {
    total+=number
    console.log(number)
  }
}
console.log('total:', total)


/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
 * –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
 * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞
 * –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
 */

const names = "Jacob,William,Solomon,Artemis";
const phones = "89001234567,89001112233,890055566377,890055566300";

displayAllPhonebookInfo(names, phones)

function displayAllPhonebookInfo(names, phones) {
  const namesArr = names.split(',')
  const phonesArr = phones.split(',')

  for(let i=0; i < namesArr.length; i+=1) {
    console.log(`${namesArr[i]}-${phonesArr[i]}`)
  }
}

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞
 * –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è
 * –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É.
 * –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
 */

const string = "Welcome to the future";

console.log(cutString(string));
console.log(cutString("Hello everyone! I'm here!"));

function cutString(string) {
  const stringArr = string.split(' ')  // —Ä–æ–±–∏–º–æ –∑ —Ä—è–¥–∫–∞ –º–∞—Å–∏–≤ 
  const cuttedString = stringArr.slice(1, stringArr.length-1)  // –∫–æ–ø—ñ—é—î–º–æ —á–∞—Å—Ç–∏–Ω—É –º–∞—Å–∏–≤—É –±–µ–∑ –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω.
  const result = cuttedString.join(' ').trim() // –∑–±–∏—Ä–∞—î–º–æ –º–∞—Å–∏–≤ —É —Ä—è–¥–æ–∫(–ø–æ—î–¥–Ω—É–≤–∞—á –º—ñ–∂ —î–ª–µ–º–µ–Ω—Ç–∞–º –ø—Ä–æ–±—ñ–ª)
// —Ç–∞ —É–±–∏—Ä–∞—î–º–æ –∑–∞–π–≤—ñ –ø—Ä–æ–±—ñ–ª–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫—É —ñ —É –∫—ñ–Ω—Ü—ñ —Ä—è–¥–∫–∞
  return result
  
}

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏
 * –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
 */

 const value = [2, 17, 94, 1, 23, 37];
 console.log(findMin(value))

function findMin(value){

// 1. –∑–∞–¥–∞—î–º–æ –≤ —è–∫–æ—Å—Ç—ñ min –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É
// 2. –∑–∞–ø—É—Å–∫–∞—î–º–æ —Ü–∏–∫–ª –Ω–∞ –ø–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É(–ø–æ—á–∏–Ω–∞—é—á–∏ –∑ –¥—Ä—É–≥–æ–≥–æ –µ–ª–µ–º., –ø–µ—Ä—à–∏–π –º–∏ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏)
// 3. –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ –ø–æ—Ç–æ—á–Ω–µ min –∑–Ω–∞—á –∑ –ø–æ—Ç–æ—á–Ω–∏–º –µ–ª–µ–º –º–∞—Å–∏–≤—É, —è–∫—â–æ –ø–æ—Ç–æ—á–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–µ–Ω—à–∏–π –∑–∞ min 
// —Ç–æ –≤—ñ–Ω —Å—Ç–∞—î min

let min = value[0];  // –ø–µ—Ä—à–∏–π –∫—Ä–æ–∫ , –ø–µ—Ä—à–∏–π –µ–ª–µ–º –º–∞—Å–∏–≤—É value[0]

  for(let i=1; i<value.length; i+=1){
    // –¥—Ä—É–≥–∏–π –∫—Ä–æ–∫, —è–∫—â–æ –ø–æ—Ç–æ—á–Ω–∏–π –µ–ª–µ–º –º–∞—Å–∏–≤—É –º–µ–Ω—à–∏–π –∑–∞ min
    if(value[i]<min) {
      min = value[i] // –¢–†–ï–¢–Ü–ô –∫—Ä–æ–∫ , —Ç–æ –∑–∞–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –µ–ª–µ–º –º–∞—Å–∏–≤—É –≤ —è–∫–æ—Å—Ç—ñ min
    }
  } 
return min
}

