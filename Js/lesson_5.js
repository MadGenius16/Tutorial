// –ü—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ arguments —ñ Array.from

function fn() {
  console.log(arguments) // –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
  const args = Array.from(arguments) // –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ 
  //–Ω–∞ –º–∞—Å–∏–≤ –∑–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ—Å—Ç—é(—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –º–µ—Ç–æ–¥–∏ –º–∞—Å–∏–≤—É)
  console.log(args)

}

fn(1, 2, 3)
fn(1, 2, 3, 4, 5)
fn(1, 2, 3, 4, 5, 6, 7)

//  –ù–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü –¥–ª—è —Å–∫–ª–∞–¥–∞–Ω–Ω—è –¥–æ–≤—ñ–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤(—á–∏—Å–µ–ª)

const add = function() {
  let total=0;

  for(const arg of arguments) {
    // console.log(arg) –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –º–∏ –ø–æ–ª—É—á–∞–µ–º –Ω–∞—à–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∏(1 2 3) (1 2 3 4 5 6 )
    total += arg;
  }
  return total;
}

console.log(add(1, 2, 3));
console.log(add(1, 2, 3, 4, 5, 6));

// –Ω–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calAverage() —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ 
// —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á. –£—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —á–∏—Å–ª–∞.

function calAverage() {
  let total=0;
  for(const arg of arguments) {
    total += arg;
  }
  return total / arguments.length
}


console.log(calAverage(1, 2, 3, 4));
console.log(calAverage(14, 8, 2));
console.log(calAverage(27, 43, 8, 36));


// ============================================


// / * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits.
//  * —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤–∏–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä –µ–ª–µ–º —ñ –∑–Ω–∞—á–µ–Ω–Ω—è 
//  –Ω—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ 1.

function logItems(){
for (let i = 0; i < arguments.length; i += 1) {
  console.log(`${i + 1} - ${arguments[i]}`);
}
}

logItems("üçé", "üçá", "üçë", "üçå", "üçã");


// **
//  * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printInfo(names, phones) —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
//  * —É –ø–∞—Ä–∞–º. names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
//  * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞
//  * –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
//  */

function printInfo(names, phones) {
  const namesArr = names.split(',');
  const phonesArr = phones.split(',');

  for(let i = 0; i < namesArr.length; i+=1) {
    console.log(`${namesArr[i]} - ${phonesArr[i]}`)
  }
}

printInfo("Jacob,William,Solomon,Artemis", 
"89001234567,89001112233,890055566377,890055566300")


// –Ω–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(minutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á minutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤.)
// —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω —Ç–∞ —Ö–≤. HH:MM


function formatTime(totalMinutes) {

  // –≤–∏—Ä–∞—Ö–æ–≤—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥ –≤ —Ö–≤.(–¥—ñ–ª–∏–º–æ —Ö–≤ –Ω–∞ 60)
  // –≤–∏—Ä–∞—Ö–æ–≤—É—î–º–æ –∑–∞–ª–∏—à–æ–∫ —Ö–≤, (–æ—Å—Ç–∞—á–∞ –≤—ñ–¥ –¥—ñ–ª–µ–Ω–Ω—è —Ö–≤ –Ω–∞  % 60)
  // –¥–æ–¥–∞—Ç–∏ –Ω—É–ª–∏–∫ –¥–æ —Ä–µ–∑—É–ª—å —è–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ —Å–∏–º–≤–æ–ª—ñ–≤ –≥–æ–¥–∏–Ω–∏ –∞–±–æ —Ö–≤ –º–µ–Ω—å—à–∞ –∑–∞ 2
  // —Å—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —Ä—è–¥–æ–∫ –∑ —á–∞—Å–æ–º
  const hours = Math.floor(totalMinutes / 60);
  const minutes = totalMinutes % 60;

  console.log(hours);
  console.log(minutes);

// –¶–µ–π –º–µ—Ç–æ–¥ padStart –º–æ–∂–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞ —Å—Ä–æ–∫–∞—Ö(—è–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ 
// –º–µ–Ω—å—à–∞ –∑–∞ 2 —Å–∏–º–≤ , –º–µ—Ç–æ–¥ –¥–æ–¥–∞—Å—Ç—å 0 –Ω–∞ –ø–æ—á–∞—Ç–æ–∫)
  const displayHours = String(hours).padStart(2, 0)
  const displayMinutes= String(minutes).padStart(2, 0)
  console.log(displayHours);
  console.log(displayMinutes);


return `${displayHours}:${displayMinutes}`
}

console.log(formatTime(70)) // '01:10'
console.log(formatTime(450))
console.log(formatTime(1000))
















